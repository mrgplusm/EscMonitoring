<#@ template language="C#" #>
<#@ import namespace="Common" #>
<#@ import namespace="Common.Model" #>
<#@ import namespace="UserControls" #>
<#@ import namespace="ViewModel" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Collections.Generic" #>

<html lang="en" xmlns="http://www.w3.org/1999/xhtml">
<head>
    <meta charset="utf-8" />
    <title></title>
    <style>
        caption {
            font-weight: 600;
        }

        table {
            border-collapse: collapse;
        }

        th, td {
            border: 1px solid #cecfd5;
            padding: 10px 15px;
        }

        tbody tr:nth-child(even) {
            background: #f0f0f2;
        }

        td:first-child {
            border-left: 1px solid #cecfd5;
        }

        div {         
            padding: 20px;
        }


        thead {
            background: #395870;
            color: #fff;
        }              

    </style>
</head>
<body>





<div id="Organisation">
        <table>
            <caption>Organisation</caption>
<# foreach (var s in Enum.GetValues(typeof(OrganisationDetail)).OfType<OrganisationDetail>()) { #>

	<tr><td> <#= s.ToString() #> </td> <td> <#= Model.OrganisationDetails[0][(int)s] #></td> </tr>

<# } #>
</table>
</div>
    <div id="Dealer">

        <table>
            <caption>Dealer</caption>
<# foreach (var s in Enum.GetValues(typeof(OrganisationDetail)).OfType<OrganisationDetail>()) { #>

	<tr><td> <#= s.ToString() #> </td> <td> <#= Model.OrganisationDetails[1][(int)s] #></td> </tr>

<# } #>
</table>
    </div>
    <div id="Errors">
        <table>
            <caption>
                Last 10 errors
            </caption>
            <thead>
	<tr>
	<# foreach (var colum in ErrorHeaderComs)
{ #>
    <th><#= colum #></th>

<#}#>
	</tr>
	</thead>
            <tbody>			
	<# 

	if(ErrorsToSend !=null) {
	  
	foreach (var source in ErrorsToSend)
{ 
		var e = new ErrorLineViewModel(source);
#>
	<tr>
		<td> <#= e.StrId #> </td>
		<td> <#= e.StrEscUnit #> </td>
		<td> <#= e.StrStatus #> </td>
		<td> <#= e.StrDevice #> </td>
		<td> <#= e.StrDetail #> </td>
		<td> <#= e.Description #> </td>
		<td> <#= e.StrDate #> </td>
	</tr>
<# } 

}#>
			</tbody>
		</table>
	</div>

  <div id="Users">
        <table>
            <caption>
                Log cleared by
            </caption>
            <thead>
	<tr>
	
    <th>User</th>
    <th>Date & Time</th>

	</tr>
	</thead>
            <tbody>
	 
	<# 


	if(ClearedErrors !=null) {
	foreach (var source in ClearedErrors)
{ 		
#>
	<tr>
		<td> <#= source.LogClearedBy #> </td>
		<td> <#= source.LogCleared.ToString("u") #> </td>		
	</tr>
<# 
} }
#>
										
	
			</tbody>
		</table>
		<# if (Model.InspectorCleared) { #>
		<p>Log was cleared during an inspection of the VA system</p>
		<# }#>
	</div>


<div id=connections>


<# 
    if(Connections !=null) foreach (var s in Connections.Where(d => d.Errors != null && d.Errors.Count > 0)) { #>      
<table>
<caption><#= s.IpAddress #></caption>
<tbody>
<# foreach (var q in Enumerable.Reverse(s.Errors.Take(10)))
{
 #>      
<tr>
<td><#= q #></td>
</tr>
<# } #>
</tbody>
</table>
<# } #>



</div>


 </body>
 </html>
<#+ 

public List<ConnectionModel> Connections { get; set; }
public List<LogClearEntry> ClearedErrors { get; set; }
public List<ErrorLineModel> ErrorsToSend { get; set; }

public SendEmailModel Model { get; set; }


private readonly string[] ErrorHeaderComs =
{
    UcLog.chId, UcLog.chUnit, UcLog.chStatus, UcLog.chDevice, UcLog.chDetail, UcLog.chDescription, UcLog.chDateTime,
};

#>


