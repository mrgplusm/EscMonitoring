<UserControl x:Class="Monitoring.UserControls.UcSchematic"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:viewModel="clr-namespace:Monitoring.ViewModel" x:Name="SchematicView"
             
             
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
                     xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:commodules="clr-namespace:Common.Commodules;assembly=Common"
                     xmlns:converters="clr-namespace:Common.Converters;assembly=Common"
                     xmlns:monitoring="clr-namespace:Monitoring"
                     xmlns:userControls="clr-namespace:Monitoring.UserControls"
                     xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
                     xmlns:behaviors="clr-namespace:Monitoring.Behaviors"
                     mc:Ignorable="d" 
             d:DesignHeight="600" d:DesignWidth="800"
             d:DataContext="{d:DesignInstance viewModel:SchematicOverView, IsDesignTimeCreatable=True}" 
             
             >
    <UserControl.Resources>

        <Storyboard x:Key="Yellow" x:Shared="False">
            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" FillBehavior="Stop" 
                             RepeatBehavior="Forever" AutoReverse="True" Duration="0:0:1" >
                <ColorAnimationUsingKeyFrames.KeyFrames>
                    <DiscreteColorKeyFrame KeyTime="0:0:0.5" Value="Yellow" />
                </ColorAnimationUsingKeyFrames.KeyFrames>
            </ColorAnimationUsingKeyFrames>
        </Storyboard>
    </UserControl.Resources>


    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="200" />
            <ColumnDefinition Width="*" MinWidth="300" />
        </Grid.ColumnDefinitions>
        <Grid.Resources>





            <DataTemplate DataType="{x:Type viewModel:LoudspeakerViewModel}">


                <Grid Width="35" Height="35">
                    <Ellipse Width="35" Height="35" StrokeThickness="2" Stroke="Black" 
                         HorizontalAlignment="Center" VerticalAlignment="Center" Name="Ellipse" >

                        <Ellipse.Style>

                            <Style TargetType="{x:Type Ellipse}">
                                <Setter Property="Fill" Value="Lime" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Path=ErrorActive}" Value="true">
                                        <DataTrigger.EnterActions>

                                            <BeginStoryboard Name="stblsp">
                                                <Storyboard >
                                                    <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Ellipse.Fill).(SolidColorBrush.Color)" FillBehavior="Stop" 
                             RepeatBehavior="Forever" AutoReverse="True" Duration="0:0:1" >
                                                        <ColorAnimationUsingKeyFrames.KeyFrames>
                                                            <DiscreteColorKeyFrame KeyTime="0:0:0.5" Value="Yellow" />
                                                        </ColorAnimationUsingKeyFrames.KeyFrames>
                                                    </ColorAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </DataTrigger.EnterActions>
                                        <DataTrigger.ExitActions>
                                            <StopStoryboard BeginStoryboardName="stblsp"></StopStoryboard>
                                        </DataTrigger.ExitActions>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Ellipse.Style>
                    </Ellipse>
                    <Rectangle Width="6" HorizontalAlignment="Left" Margin="6,00,0,0" Fill="White" Stroke="Black" Height="18" />
                    <Polygon Points="12,13 20,6 20,29, 12,22"  Stroke="Black" Fill="White"></Polygon>
                    <Path Stroke="Black">
                        <Path.Data>
                            <PathGeometry>
                                <PathFigure StartPoint="24,9">
                                    <ArcSegment IsLargeArc="True"
                                Size="4, 6"
                                Point="24, 26"
                                SweepDirection="Clockwise" />
                                </PathFigure>
                                <PathFigure StartPoint="22,13">
                                    <ArcSegment IsLargeArc="True"
                                Size="2, 3"
                                Point="22, 22"
                                SweepDirection="Clockwise" />
                                </PathFigure>
                            </PathGeometry>
                        </Path.Data>
                    </Path>
                    <TextBlock Margin="13,11,0,0" FontSize="9" FontWeight="ExtraBold" >
                        <TextBlock.Style>
                            <Style TargetType="{x:Type TextBlock}">
                                <Setter Property="Text" Value="A"></Setter>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Line}" Value="{x:Static commodules:LoudspeakerLine.LineB}">
                                        <Setter Property="Text" Value="B"></Setter>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBlock.Style>
                    </TextBlock>

                </Grid>

            </DataTemplate>

            <DataTemplate DataType="{x:Type viewModel:EvacuationPanelViewModel}" >


                <Border CornerRadius="3" BorderBrush="Black" BorderThickness="1" Width="40" Height="30">
                    <Grid>
                        <TextBlock Text="E" Foreground="White" FontWeight="Heavy" HorizontalAlignment="Center" VerticalAlignment="Center"></TextBlock>
                        <Ellipse Width="25" Height="25" StrokeThickness="2" Stroke="White" HorizontalAlignment="Center" VerticalAlignment="Center" ></Ellipse>
                        <Polyline Points="30.5,0, 30.5,30" Stroke="White" StrokeThickness="2"></Polyline>
                    </Grid>
                    <Border.Style>
                        <Style TargetType="Border">
                            <Setter Property="Background" Value="Red"></Setter>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Path=ErrorActive}" Value="true">
                                    <DataTrigger.EnterActions>
                                        <BeginStoryboard Name="evacstb" Storyboard="{StaticResource Yellow}"  />
                                    </DataTrigger.EnterActions>
                                    <DataTrigger.ExitActions>
                                        <StopStoryboard BeginStoryboardName="evacstb" />
                                    </DataTrigger.ExitActions>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Border.Style>
                </Border>


            </DataTemplate>

            <DataTemplate DataType="{x:Type viewModel:FDsViewModel}" >


                <Border CornerRadius="3" BorderBrush="Black" BorderThickness="1" Width="40" Height="30" Background="Red">
                    <TextBlock Text="FDS" Foreground="White" FontWeight="Heavy" HorizontalAlignment="Center" VerticalAlignment="Center" />
                </Border>

            </DataTemplate>



            <DataTemplate DataType="{x:Type viewModel:FdsPanelViewModel}" >


                <Border CornerRadius="3" BorderBrush="Black" BorderThickness="1" Width="40" Height="30">
                    <TextBlock Text="FDSi" Foreground="White" FontWeight="Heavy" HorizontalAlignment="Center" VerticalAlignment="Center" />
                    <Border.Style>
                        <Style TargetType="Border">
                            <Setter Property="Background" Value="Red"></Setter>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Path=ErrorActive}" Value="true">
                                    <DataTrigger.EnterActions>
                                        <BeginStoryboard Name="fdsstb" Storyboard="{StaticResource Yellow}"  />
                                    </DataTrigger.EnterActions>
                                    <DataTrigger.ExitActions>
                                        <StopStoryboard BeginStoryboardName="fdsstb" />
                                    </DataTrigger.ExitActions>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Border.Style>
                </Border>



            </DataTemplate>


            <DataTemplate DataType="{x:Type viewModel:FirePanelViewModel}" >






                <Border CornerRadius="3" BorderBrush="Black" BorderThickness="1" Width="40" Height="30">
                    <Grid>
                        <TextBlock Text="F" Foreground="White" FontWeight="Heavy" HorizontalAlignment="Center" VerticalAlignment="Center"></TextBlock>
                        <Ellipse Width="25" Height="25" StrokeThickness="2" Stroke="White" HorizontalAlignment="Center" VerticalAlignment="Center" ></Ellipse>
                        <Polyline Points="30.5,0, 30.5,30" Stroke="White" StrokeThickness="2"></Polyline>
                    </Grid>
                    <Border.Style>
                        <Style TargetType="Border">
                            <Setter Property="Background" Value="Red"></Setter>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Path=ErrorActive}" Value="true">
                                    <DataTrigger.EnterActions>
                                        <BeginStoryboard Name="firestb" Storyboard="{StaticResource Yellow}"  />
                                    </DataTrigger.EnterActions>
                                    <DataTrigger.ExitActions>
                                        <StopStoryboard BeginStoryboardName="firestb" />
                                    </DataTrigger.ExitActions>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Border.Style>
                </Border>




            </DataTemplate>


            <!-- This is the DataTemplate that will be used to render the Node class -->
            <DataTemplate DataType="{x:Type viewModel:MainUnitViewModel}">



                <Border CornerRadius="3" BorderBrush="Black" BorderThickness="1" Width="40" Height="30">
                    <TextBlock Text="VACIE" Foreground="White" FontWeight="Heavy" HorizontalAlignment="Center" VerticalAlignment="Center"></TextBlock>
                    <Border.Style>
                        <Style TargetType="Border">
                            <Setter Property="Background" Value="Lime"></Setter>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Path=ErrorActive}" Value="true">
                                    <DataTrigger.EnterActions>
                                        <BeginStoryboard Name="vaciestb" Storyboard="{StaticResource Yellow}"  />
                                    </DataTrigger.EnterActions>
                                    <DataTrigger.ExitActions>
                                        <StopStoryboard BeginStoryboardName="vaciestb" />
                                    </DataTrigger.ExitActions>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Border.Style>
                </Border>

            </DataTemplate>

        </Grid.Resources>


        <userControls:SchematicLeftSideBar  />
        <ListBox Grid.Row="0" ItemsSource="{Binding Path=Nodes}" SelectedItem="{Binding SelectedObject}" Grid.Column="1" 
                 ScrollViewer.VerticalScrollBarVisibility="Visible" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" 
                 ScrollViewer.HorizontalScrollBarVisibility="Visible" 
                 PreviewMouseDown="UIElement_OnPreviewMouseDown" Name="ListBox"  >

            <i:Interaction.Behaviors>                
                <userControls:FdsDrop />
            </i:Interaction.Behaviors>
            <ListBox.ItemsPanel>
                <ItemsPanelTemplate>
                    <Canvas IsItemsHost="True" Background="{Binding Path=SchematicBackground}" VerticalAlignment="Top" HorizontalAlignment="Left"
                                           Width="{Binding Path=CanvasWidth}" 
                                           Height="{Binding Path=CanvasHeight}"  />
                </ItemsPanelTemplate>

            </ListBox.ItemsPanel>


            <ListBox.ItemContainerStyle>
                <Style TargetType="ListBoxItem">
                    <Setter Property="Canvas.Left">
                        <Setter.Value>
                            <MultiBinding Converter="{converters:ModuleLocationConverter}">
                                <Binding Path="Location.X" />
                                <Binding Path="DataContext.Scaling" RelativeSource="{RelativeSource FindAncestor, AncestorType=ListBox}"/>
                            </MultiBinding>
                        </Setter.Value>
                    </Setter>


                    <Setter Property="Canvas.Top">
                        <Setter.Value>
                            <MultiBinding Converter="{converters:ModuleLocationConverter}">
                                <Binding Path="Location.Y" />
                                <Binding Path="DataContext.Scaling" RelativeSource="{RelativeSource FindAncestor, AncestorType=ListBox}"/>
                            </MultiBinding>
                        </Setter.Value>
                    </Setter>
                    
                    <Setter Property="LayoutTransform">
                        <Setter.Value>
                            <ScaleTransform ScaleX="{Binding Path=DataContext.PictScalingValue, 
                                RelativeSource={RelativeSource FindAncestor, AncestorType=Grid}}" 
                                            ScaleY="{Binding Path=DataContext.PictScalingValue, 
                                RelativeSource={RelativeSource FindAncestor, AncestorType=Grid}}"
                                            CenterX="15" CenterY="20"
                                            />
                        </Setter.Value>
                    </Setter>
                    
                    <Setter Property="FocusVisualStyle" Value="{StaticResource EmptyFocusVisualStyle}"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                <Thumb DragDelta="ThumbDrag"
                                      >
                                    <i:Interaction.Behaviors>
                                        <behaviors:ClickBehavior />
                                    </i:Interaction.Behaviors>
                                    <!--IsEnabled="{Binding IsSelected,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBoxItem}}}"-->
                                    <Thumb.Template>
                                        
                                        <ControlTemplate TargetType="{x:Type Thumb}" >

                                            <ContentPresenter x:Name="Content" 
                                                              Content="{Binding RelativeSource={RelativeSource FindAncestor, 
                                                                AncestorType={x:Type ListBoxItem}}, Path=Content}"  >
                                                <ContentPresenter.ContextMenu>
                                                    <ContextMenu >
                                                        <MenuItem Header="Remove" Command="{Binding RemoveThis}" />
                                                    </ContextMenu>
                                                </ContentPresenter.ContextMenu>
                                                                                                
                                                <ContentPresenter.ToolTip>
                                                    <TextBlock Text="{Binding Path=DisplayName}"></TextBlock>
                                                </ContentPresenter.ToolTip>

                                            </ContentPresenter>



                                        </ControlTemplate>

                                    </Thumb.Template>

                                </Thumb>
                            </ControlTemplate>
                        </Setter.Value>

                    </Setter>

                    <Style.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Effect">
                                <Setter.Value>
                                    <DropShadowEffect Color="Gray" ShadowDepth="4" BlurRadius="10"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        

                    </Style.Triggers>
                </Style>
            </ListBox.ItemContainerStyle>
        </ListBox>


        <GridSplitter HorizontalAlignment="Right" Width="5" Grid.Column="0" Grid.Row="0" Panel.ZIndex="2"></GridSplitter>


    </Grid>
</UserControl>