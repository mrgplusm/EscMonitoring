<UserControl x:Class="Monitoring.View.ConnectionView"
    
    
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008" mc:Ignorable="d"
    xmlns:common1="clr-namespace:Common;assembly=Common"    
    xmlns:connection1="clr-namespace:Monitoring.ViewModel.Connection"
    xmlns:validators="clr-namespace:Common.Validators;assembly=Common"
    xmlns:converters="clr-namespace:Common.Converters;assembly=Common"
    xmlns:view="clr-namespace:Monitoring.View"    
    d:DataContext="{d:DesignInstance connection1:ConnectionViewModel, IsDesignTimeCreatable=True}">
    
    <Grid>
        <GroupBox Header="{Binding Path=UnitId, Converter={converters:MainUnitNameDisplayValue}}" HorizontalAlignment="Stretch" >


            <Grid Margin="5" >
                <Grid.ColumnDefinitions>

                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>

                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>

                <Button Margin="3" Command="{Binding RelativeSource={RelativeSource AncestorType={x:Type UserControl}, AncestorLevel=2}, 
                        Path=DataContext.RemoveConnection}" CommandParameter="{Binding}" Grid.Column="2" Grid.Row="0" 
                        Content="{x:Static view:Communication.Remove}" Name="removeButton" />

                <common1:ConnectButton Connection="{Binding Path=Connection}" Type="{Binding Path=ConnectType}" Address="{Binding Path=Ipaddress}" 
                            Grid.Column="0" Grid.Row="1" Mode="Monitoring"
                            Name="btnConnect" />
                
                <TextBlock Grid.Column="0" HorizontalAlignment="Right" Width="150" Margin="3" IsManipulationEnabled="False" 
                               Grid.Row="0" Text="{x:Static view:Communication.ComConnect}" Visibility="{Binding Path=IsNetwork, Converter={converters:BoolToVisibilityInvertedConverter}}"/>

                <TextBlock Grid.Column="0" HorizontalAlignment="Right"  Width="150" IsManipulationEnabled="False" Grid.Row="0" Text="{x:Static view:Communication.NetConnect}" 
                               Visibility="{Binding Path=IsNetwork, Converter={converters:BoolToVisibilityConverter}}"/>

                <ComboBox ItemsSource="{Binding Path=Ports}" Text="{Binding Path=Ipaddress}" IsEditable="True" 
                              Grid.Row="0" Grid.Column="1" Width="200" Name="PortCombo"
                              Visibility="{Binding Path=IsNetwork, Converter={converters:BoolToVisibilityInvertedConverter}}" >
                    <ComboBox.Style>
                        <Style TargetType="ComboBox">
                            <Style.Triggers>

                            </Style.Triggers>
                        </Style>
                    </ComboBox.Style>
                </ComboBox>

                <TextBox Grid.Row="0" Grid.Column="1" Width="150"
                             Visibility="{Binding Path=IsNetwork, Converter={converters:BoolToVisibilityConverter}}" Name="tbIpAddr" >

                    <Binding Path="Ipaddress" ValidatesOnExceptions="True" NotifyOnValidationError="True" UpdateSourceTrigger="PropertyChanged">
                        <Binding.ValidationRules>
                            <validators:IpAddressValidate />
                        </Binding.ValidationRules>
                    </Binding>
                    <TextBox.Style>
                        <Style TargetType="{x:Type TextBox}">
                            <Style.Triggers>
                                <Trigger Property="Validation.HasError" Value="true">
                                    <Setter Property="ToolTip" Value="{Binding RelativeSource={x:Static RelativeSource.Self},
                                            Path=(Validation.Errors)[0].ErrorContent}"/>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </TextBox.Style>
                </TextBox>

                <TextBlock Grid.Column="0" Grid.Row="3" Grid.ColumnSpan="2" Text="{Binding Path=ErrorInfo, Mode=OneWay}" Foreground="Red" Width="400" 
                                                   TextWrapping="WrapWithOverflow"  />

                <TextBlock Name="txtInstallMode" Grid.Row="1" Grid.Column="1" Margin="3" Width="200" >
                    <TextBlock.Style>
                        <Style TargetType="TextBlock">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Path=ConnectMode}" Value="{x:Static common1:ConnectMode.None}">
                                    <Setter Value="{x:Static view:Communication.InstallModeOff}" Property="Text"/>
                                    <Setter Property="Background" Value="Red" />
                                </DataTrigger>

                                <DataTrigger Binding="{Binding Path=ConnectMode}" Value="{x:Static common1:ConnectMode.Monitoring}">
                                    <Setter Value="{x:Static view:Communication.MonitoringMode}" Property="Text"></Setter>
                                    <Setter Property="Background" Value="DeepSkyBlue" />
                                    <Setter Value="False" Property="IsEnabled" ></Setter>
                                </DataTrigger>

                                <DataTrigger Binding="{Binding Path=UnitId, Converter={converters:IsPositiveNumber}}" Value="True" >
                                    <Setter Property="Background" Value="Green" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBlock.Style>
                </TextBlock>
            </Grid>
        </GroupBox>
    </Grid>
</UserControl>
